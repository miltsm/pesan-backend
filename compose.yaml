# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
name: pesan

services:
  product-service:
    build:
      context: .
      target: final
    ports:
      - 50051:${PRODUCT_PORT}
    environment:
      HOST: ${HOST}
      PORT: ${PRODUCT_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD_FILE: /run/secrets/db-password
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
    secrets:
      - db-password

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker compose up`.
    depends_on:
      db:
        condition: service_healthy 
  db:
    #image: postgres
    build:
      context: ./db/
    restart: always
    user: postgres
    secrets:
      - db-password
    #volumes:
      # - db-data:/var/lib/postgresql/data
    environment:
      #- POSTGRES_USER=mildotdev
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password 
    ports:
      - 5432:${POSTGRES_PORT}
    #expose:
    #   - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  db-data:
secrets:
  db-password:
    file: db/password.txt

